"use strict";(()=>{var e={};e.id=36,e.ids=[36],e.modules={2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},5816:e=>{e.exports=require("process")},6162:e=>{e.exports=require("worker_threads")},2254:e=>{e.exports=require("node:buffer")},6005:e=>{e.exports=require("node:crypto")},7561:e=>{e.exports=require("node:fs")},8849:e=>{e.exports=require("node:http")},2286:e=>{e.exports=require("node:https")},7503:e=>{e.exports=require("node:net")},9411:e=>{e.exports=require("node:path")},7742:e=>{e.exports=require("node:process")},4492:e=>{e.exports=require("node:stream")},2477:e=>{e.exports=require("node:stream/web")},1041:e=>{e.exports=require("node:url")},7261:e=>{e.exports=require("node:util")},5628:e=>{e.exports=require("node:zlib")},3125:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>q,patchFetch:()=>h,requestAsyncStorage:()=>x,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c});var s={};t.r(s),t.d(s,{POST:()=>d});var o=t(9303),n=t(8716),a=t(670),i=t(7070),p=t(6471),u=t(2663);async function d(e){try{let{userId:r}=(0,p.I8)();if(!r)return i.NextResponse.json({error:"Unauthorized"},{status:401});let{recipeId:t,date:s,mealType:o}=await e.json();if(!t||!s||!o)return i.NextResponse.json({error:"Missing required fields"},{status:400});await u._.user.upsert({where:{id:r},update:{},create:{id:r,email:""}});let n=await u._.mealPlan.upsert({where:{userId_date_mealType:{userId:r,date:new Date(s),mealType:o}},update:{recipeId:t},create:{userId:r,recipeId:t,date:new Date(s),mealType:o}});return i.NextResponse.json({success:!0,mealPlan:n})}catch(e){return console.error("Error adding to meal plan:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/meal-plan/route",pathname:"/api/meal-plan",filename:"route",bundlePath:"app/api/meal-plan/route"},resolvedPagePath:"C:\\Users\\mdoma\\Desktop\\recipe\\app\\api\\meal-plan\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:x,staticGenerationAsyncStorage:c,serverHooks:m}=l,q="/api/meal-plan/route";function h(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}},2663:(e,r,t)=>{t.d(r,{_:()=>o});let s=require("@prisma/client"),o=globalThis.prisma??new s.PrismaClient},9303:(e,r,t)=>{e.exports=t(517)}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[510,471],()=>t(3125));module.exports=s})();